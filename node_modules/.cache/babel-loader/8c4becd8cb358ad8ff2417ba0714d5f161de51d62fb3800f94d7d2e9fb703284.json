{"ast":null,"code":"var _jsxFileName = \"/Users/bekzatnadir/Desktop/redux-task/src/components/editDialog.tsx\",\n  _s = $RefreshSig$();\nimport Button from '@mui/material/Button';\nimport Dialog from '@mui/material/Dialog';\nimport DialogActions from '@mui/material/DialogActions';\nimport DialogContent from '@mui/material/DialogContent';\nimport DialogTitle from '@mui/material/DialogTitle';\nimport TextField from '@mui/material/TextField';\nimport { useState } from 'react';\nimport { useAppDispatch } from '../redux/hooks';\nimport { editTodo } from '../redux/slices/syncSlice';\nimport { editTodoAsync } from '../redux/thuks/asyncThunk';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst EditDialog = _ref => {\n  _s();\n  let {\n    isOpen,\n    isAsync = false,\n    setOpen,\n    todo\n  } = _ref;\n  const dispatch = useAppDispatch();\n  const [title, setTitle] = useState(todo.title);\n  const handleChange = () => {\n    dispatch(!isAsync ? editTodo({\n      id: todo.id,\n      title\n    }) : editTodoAsync({\n      id: todo.id,\n      title\n    }));\n    setOpen(false);\n  };\n  const handleClose = () => {\n    setOpen(false);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Dialog, {\n      open: isOpen,\n      onClose: handleClose,\n      children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n        children: \"\\u0418\\u0437\\u043C\\u0435\\u043D\\u0435\\u043D\\u0438\\u0435 ToDo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(DialogContent, {\n        children: /*#__PURE__*/_jsxDEV(TextField, {\n          autoFocus: true,\n          margin: 'dense',\n          label: 'Title',\n          type: 'text',\n          fullWidth: true,\n          variant: 'standard',\n          value: title,\n          onChange: _ref2 => {\n            let {\n              target\n            } = _ref2;\n            return setTitle(target.value);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 6\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(DialogActions, {\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          onClick: handleClose,\n          children: \"\\u041E\\u0442\\u043C\\u0435\\u043D\\u0430\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          onClick: handleChange,\n          children: \"\\u0418\\u0437\\u043C\\u0435\\u043D\\u0438\\u0442\\u044C\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 6\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 4\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 3\n  }, this);\n};\n_s(EditDialog, \"igxU04QdSkuiwZpH9uaROvTFVro=\", false, function () {\n  return [useAppDispatch];\n});\n_c = EditDialog;\nexport default EditDialog;\nvar _c;\n$RefreshReg$(_c, \"EditDialog\");","map":{"version":3,"names":["Button","Dialog","DialogActions","DialogContent","DialogTitle","TextField","useState","useAppDispatch","editTodo","editTodoAsync","jsxDEV","_jsxDEV","EditDialog","_ref","_s","isOpen","isAsync","setOpen","todo","dispatch","title","setTitle","handleChange","id","handleClose","children","open","onClose","fileName","_jsxFileName","lineNumber","columnNumber","autoFocus","margin","label","type","fullWidth","variant","value","onChange","_ref2","target","onClick","_c","$RefreshReg$"],"sources":["/Users/bekzatnadir/Desktop/redux-task/src/components/editDialog.tsx"],"sourcesContent":["import Button from '@mui/material/Button'\nimport Dialog from '@mui/material/Dialog'\nimport DialogActions from '@mui/material/DialogActions'\nimport DialogContent from '@mui/material/DialogContent'\nimport DialogTitle from '@mui/material/DialogTitle'\nimport TextField from '@mui/material/TextField'\nimport {Dispatch, FC, SetStateAction, useState} from 'react'\n\nimport {IToDo} from '../constants/types'\nimport {useAppDispatch} from '../redux/hooks'\nimport {editTodo} from '../redux/slices/syncSlice'\nimport {editTodoAsync} from '../redux/thuks/asyncThunk'\n\ntype TProps = {\n\tisOpen: boolean\n\tisAsync?: boolean\n\tsetOpen: Dispatch<SetStateAction<boolean>>\n\ttodo: IToDo\n}\n\nconst EditDialog: FC<TProps> = ({isOpen, isAsync = false, setOpen, todo}) => {\n\tconst dispatch = useAppDispatch()\n\tconst [title, setTitle] = useState(todo.title)\n\tconst handleChange = () => {\n\t\tdispatch(!isAsync ? editTodo({\n\t\t\tid: todo.id,\n\t\t\ttitle\n\t\t}) : editTodoAsync({id: todo.id, title}))\n\t\tsetOpen(false)\n\t}\n\tconst handleClose = () => {\n\t\tsetOpen(false)\n\t}\n\n\treturn (\n\t\t<div>\n\t\t\t<Dialog\n\t\t\t\topen={isOpen}\n\t\t\t\tonClose={handleClose}\n\t\t\t>\n\t\t\t\t<DialogTitle>Изменение ToDo</DialogTitle>\n\t\t\t\t<DialogContent>\n\t\t\t\t\t<TextField\n\t\t\t\t\t\tautoFocus\n\t\t\t\t\t\tmargin={'dense'}\n\t\t\t\t\t\tlabel={'Title'}\n\t\t\t\t\t\ttype={'text'}\n\t\t\t\t\t\tfullWidth\n\t\t\t\t\t\tvariant={'standard'}\n\t\t\t\t\t\tvalue={title}\n\t\t\t\t\t\tonChange={({target}) => setTitle(target.value)}\n\t\t\t\t\t/>\n\t\t\t\t</DialogContent>\n\t\t\t\t<DialogActions>\n\t\t\t\t\t<Button onClick={handleClose}>Отмена</Button>\n\t\t\t\t\t<Button onClick={handleChange}>Изменить</Button>\n\t\t\t\t</DialogActions>\n\t\t\t</Dialog>\n\t\t</div>\n\t)\n}\n\nexport default EditDialog\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}